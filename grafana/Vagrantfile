# Le Vagrantfile pour Grafana
# zf151107.1405

#Script Vagrant qui permet de provisionner un serveur InfluxDB et Grafana
#vagrant status pour voir ce qui est configuré !

#Usage:
#pour créer ou allumer: vagrant up mach1, ou vagrant up mach1 mach2, ou vagrant up, démarre toutes les machines !
#pour se connecter en ssh: vagrant ssh...même chose que pour 'up'
#pour suspendre: vagrant suspend...même chose que pour 'up'
#pour réveiller: vagrant resume...même chose que pour 'up'
#pour détruire: vagrant destroy...même chose que pour 'up'
#pour connaitre l'état: vagrant status

#Login: vagrant
#Password: vagrant


# -*- mode: ruby -*-
# vi: set ft=ruby :

# All Vagrant configuration is done below. The "2" in Vagrant.configure
# configures the configuration version (we support older styles for
# backwards compatibility). Please don't change it unless you know what
# you're doing.

Vagrant.configure(2) do |config|
  # The most common configuration options are documented and commented below.
  # For a complete reference, please see the online documentation at
  # https://docs.vagrantup.com.

  # Every Vagrant development environment requires a box. You can search for
  # boxes at https://atlas.hashicorp.com/search.

  # Disable automatic box update checking. If you disable this, then
  # boxes will only be checked for updates when the user runs
  # `vagrant box outdated`. This is not recommended.
  # config.vm.box_check_update = false

  # Create a forwarded port mapping which allows access to a specific port
  # within the machine from a port on the host machine. In the example below,
  # accessing "localhost:8080" will access port 80 on the guest machine.
  # config.vm.network "forwarded_port", guest: 80, host: 8080

  # Create a private network, which allows host-only access to the machine
  # using a specific IP.
  # config.vm.network "private_network", ip: "192.168.33.10"

  # Create a public network, which generally matched to bridged network.
  # Bridged networks make the machine appear as another physical device on
  # your network.
  # config.vm.network "public_network"

  # Share an additional folder to the guest VM. The first argument is
  # the path on the host to the actual folder. The second argument is
  # the path on the guest to mount the folder. And the optional third
  # argument is a set of non-required options.
  # config.vm.synced_folder "../data", "/vagrant_data"

  # Provider-specific configuration so you can fine-tune various
  # backing providers for Vagrant. These expose provider-specific options.
  # Example for VirtualBox:
  #
  #config.vm.provider "virtualbox" do |vb|
  #   # Display the VirtualBox GUI when booting the machine
  #   vb.gui = true
  #   # Customize the amount of memory on the VM:
  #   vb.memory = "512"
  #end
  #
  # View the documentation for the provider you are using for more
  # information on available options.

  # Define a Vagrant Push strategy for pushing to Atlas. Other push strategies
  # such as FTP and Heroku are also available. See the documentation at
  # https://docs.vagrantup.com/v2/push/atlas.html for more information.
  # config.push.define "atlas" do |push|
  #   push.app = "YOUR_ATLAS_USERNAME/YOUR_APPLICATION_NAME"
  # end

  # Enable provisioning with a shell script. Additional provisioners such as
  # Puppet, Chef, Ansible, Salt, and Docker are also available. Please see the
  # documentation for more information about their specific syntax and use.
  # config.vm.provision "shell", inline: <<-SHELL
  #   sudo apt-get update
  #   sudo apt-get install -y apache2
  # SHELL

#    config.vm.provision "shell", inline: "echo Hello"


$prov1 = <<SCRIPT
echo ---------------------I am provisioning...
echo ---------------------change keyboard...
sed -i.bak 's/^XKBMODEL=.*/XKBMODEL="macintosh"/' /etc/default/keyboard
sed -i.bak 's/^XKBLAYOUT=.*/XKBLAYOUT="ch"/' /etc/default/keyboard
sed -i.bak 's/^XKBVARIANT=.*/XKBVARIANT="fr"/' /etc/default/keyboard
sed -i.bak 's/^XKBOPTIONS=.*/XKBOPTIONS="lv3:alt_switch"/' /etc/default/keyboard
setupcon --force

echo ---------------------change password Vagrant et Ubuntu user
usermod --password '$6$rT3MgCSe$yNURL1FYaaJgDKR5S7FIMoUiRC.Krooi54bHNHdpYZwWNtWy/9wrGOF8M3NIZQMNH5/IU0zyzQEq2M4KbocZm.' vagrant
usermod --password '$6$r4hbGMiV$JvEwB/BnabQsSooWEr89OfSXP.Jv8wHpF5mykiKYLxWQLhzuGp7JmqgWfpGKSIm5pS1dhrdadoNWpS5YvZ5l/0' ubuntu

echo ---------------------copie des certificats SSH
echo 'ssh-dss AAAAB3NzaC1kc3MAAAEBAIxWQx7XYfS7jpJGGxaEGlS7RlWTIqMBQi4cdEKHlRDmPsurwM7qw4SeFt/0Ou31HRmO/+CSQwjcN6tL73nJasK40Mb6+sLN1NOU+M+o6zrKKm4j3plTXytgToQMx0Yx4n3nfTYE6/8rVAmbSX3DFJrOtBScFR8bUtjlPwJDXE/Ouz0eFZGCmre+Ar+mAElNvRLk1V3WYyknMAaZ/i4rCsWWpnOlFh61oqq2KJcesSD1PufP76C8ZcsWwt/+QekcQqtPcIYRIvq3pUnbSb/xXeHUJBFsleOLCqi8t5/CNnk2v++TC5EcVMG/8H5EFhF8zu4Qr9pYv6/sn+01Rllla0UAAAAVAMsD4t0mJaiWu0E3zjcncUWXe17HAAABACLJtJiLkFSGkb1k47hKn2yfYAk+jY2ogcCPYInNgjDQR17I8KsuNwvyToewZpbruvxNF5HiLhlLt91z4sUyH1ToqCsswSa2RZGutFkZQq+NJ4dSxkPhQrCUtI2mDGXxJxcD3BnCFOBbbSR90Sou/2saYtiZQjzCX4nn83n039OYsCCmCUFV31pusyA6HYTwK5O45hN0mL/CnInhzP/gxxeBImtxZ4kiYrQITSAKMEILEGjfGGjBrlZoEpSZqOGJUEH++8Z9w7oQi522lDk3vIob3tuQYlEVMZATs7hLt8cAPMz23iEeui/0SBpDOLjbQe0CpRUviXhbeunQ5CJup04AAAEAOmsvY0oGWkcSdoPLkqK9ip2tDJrMRJwvcJ9OQq4Cae7BvLlG6iryN1geS1+sQDZrV5My1R2rAfVuvbIW0P8HtmUOYtakiD8LA1Zsvm5PzTPZOwfa6mxt+dnEdt4+ShGUnWCgaemCVfkjwoTWEmjZWunMtqG4gaFqrEH0upek7PX6wb3rOYmkeCctd4w6nTdlIbnDijx5gL6QNLds7b9ZC65vFlp2tl11yrRH54SmirRxOwHT6x2FZI6U0giiW2q5YkcHaErR796zkOTYZOznrB7Vkzev1hTUxnZ6DUkQg5X6mkmqtGTThCNXbgKVjOsSa6Y8ij42rVCPFe3pIcUKkQ== Corthesy' >> /home/ubuntu/.ssh/authorized_keys

echo 'ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDksDVJZQ3GaCkD4N1etyJ8yWpaSXrLnynG7jHqhqEmQQKAwWpauyp2mIUYKFyv9JnAlf91XCwGzE1azSJokkfCMo4AEpgj4SgNuucJEzMy4Zjrl3VSyBPzGvpN40XR/ITOf9Dd8VCTss6z28Kbvj+GBENRNIxGIc0FUgaTVqkjrof24TentxSPbEEpfvsCTh7ANVRrwGZMr4PzX5M+yen+MfQeNTBmSRBUpjWe0BZfTcGpOxYKlohsPbd1If5tnQPURWHhMZChNo4ASqtRRnHm5grlZqZP+jUQ0jrkU3Q+1LzSyN3J9KWSTVGVUonc8pI9JARLf1N+2aWKgq/L9eM3 zuzu@siipc6.epfl.ch' >> /home/ubuntu/.ssh/authorized_keys

echo 'ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQC07OXCLvDJzUG+1yxDlBeFkYRuceUN7m2PdRPtcJN7QrgMsjvJkZY8JxTbiHgEso0DIzHjkL1A/NXe+TOjqPetlGIMpFll0PELKHkHQ69aWBE+nKOxSM0dwJyjY7YN6FM5xK59pn8V29lwrWFyvQSzbMoZjhtNpJ94dfp+7XN16bNTdFdrG+9qZKeQFG2vpfIevk1NSg88TutNcQeTNgqpBNs/3/kS75wfOY8+MLTJ3lRnGT7RkWkyNaj6Xj5feZgP0WA5fyjfHx+RmtiV1rmsRYIS4OCE+kfkYLLvpPKKwPH2bljFQcZR4q8GhLWs2cbZgH7FPHVRL8keDO4WXQvB' >> /home/ubuntu/.ssh/authorized_keys

echo ---------------------change de sources pour apt-get
#attention, il faut anti-slasher 2x !
sed -i -e "s/http:\\/\\/archive.ubuntu.com/http:\\/\\/mirror.switch.ch\\/ftp\\/mirror\\/ubuntu/g" /etc/apt/sources.list

echo ---------------------update and upgrade
apt-get -y update
#apt-get -y upgrade

echo ---------------------remove chef and puppet
dpkg -P chef chef-zero puppet puppet-common

#echo ---------------------install xfce4
#apt-get -y install xfce4 xdm xfce4-terminal

#echo ---------------------patch miscfiles
#sudo apt-get -y remove miscfiles
#sudo apt-get -y autoremove

#echo ---------------------install conky
#apt-get -y install conky
#echo "conky -a top_right -d" > zconky.sh
#chmod +x zconky.sh

echo ---------------------install utils
apt-get -y install htop git

echo ---------------------clean...
apt-get -y autoremove
apt-get -y clean
apt-get -y autoclean

echo ---------------------install and configure Grafana, InfluxDB and Collectd...
/vagrant/deploy.sh

echo ---------------------finished...
#echo ---------------------poweroff, faut faire maintenant un vagrant up pour la rallumer
#poweroff
SCRIPT



$prov2 = <<SCRIPT
echo ---------------------I am provisioning...
echo ---------------------change keyboard...
sed -i.bak 's/^XKBMODEL=.*/XKBMODEL="macintosh"/' /etc/default/keyboard
sed -i.bak 's/^XKBLAYOUT=.*/XKBLAYOUT="ch"/' /etc/default/keyboard
sed -i.bak 's/^XKBVARIANT=.*/XKBVARIANT="fr"/' /etc/default/keyboard
sed -i.bak 's/^XKBOPTIONS=.*/XKBOPTIONS="lv3:alt_switch"/' /etc/default/keyboard
setupcon --force

echo ---------------------change password Vagrant et Ubuntu user
usermod --password '$6$rT3MgCSe$yNURL1FYaaJgDKR5S7FIMoUiRC.Krooi54bHNHdpYZwWNtWy/9wrGOF8M3NIZQMNH5/IU0zyzQEq2M4KbocZm.' vagrant
usermod --password '$6$r4hbGMiV$JvEwB/BnabQsSooWEr89OfSXP.Jv8wHpF5mykiKYLxWQLhzuGp7JmqgWfpGKSIm5pS1dhrdadoNWpS5YvZ5l/0' ubuntu

echo ---------------------copie des certificats SSH
echo 'ssh-dss AAAAB3NzaC1kc3MAAAEBAIxWQx7XYfS7jpJGGxaEGlS7RlWTIqMBQi4cdEKHlRDmPsurwM7qw4SeFt/0Ou31HRmO/+CSQwjcN6tL73nJasK40Mb6+sLN1NOU+M+o6zrKKm4j3plTXytgToQMx0Yx4n3nfTYE6/8rVAmbSX3DFJrOtBScFR8bUtjlPwJDXE/Ouz0eFZGCmre+Ar+mAElNvRLk1V3WYyknMAaZ/i4rCsWWpnOlFh61oqq2KJcesSD1PufP76C8ZcsWwt/+QekcQqtPcIYRIvq3pUnbSb/xXeHUJBFsleOLCqi8t5/CNnk2v++TC5EcVMG/8H5EFhF8zu4Qr9pYv6/sn+01Rllla0UAAAAVAMsD4t0mJaiWu0E3zjcncUWXe17HAAABACLJtJiLkFSGkb1k47hKn2yfYAk+jY2ogcCPYInNgjDQR17I8KsuNwvyToewZpbruvxNF5HiLhlLt91z4sUyH1ToqCsswSa2RZGutFkZQq+NJ4dSxkPhQrCUtI2mDGXxJxcD3BnCFOBbbSR90Sou/2saYtiZQjzCX4nn83n039OYsCCmCUFV31pusyA6HYTwK5O45hN0mL/CnInhzP/gxxeBImtxZ4kiYrQITSAKMEILEGjfGGjBrlZoEpSZqOGJUEH++8Z9w7oQi522lDk3vIob3tuQYlEVMZATs7hLt8cAPMz23iEeui/0SBpDOLjbQe0CpRUviXhbeunQ5CJup04AAAEAOmsvY0oGWkcSdoPLkqK9ip2tDJrMRJwvcJ9OQq4Cae7BvLlG6iryN1geS1+sQDZrV5My1R2rAfVuvbIW0P8HtmUOYtakiD8LA1Zsvm5PzTPZOwfa6mxt+dnEdt4+ShGUnWCgaemCVfkjwoTWEmjZWunMtqG4gaFqrEH0upek7PX6wb3rOYmkeCctd4w6nTdlIbnDijx5gL6QNLds7b9ZC65vFlp2tl11yrRH54SmirRxOwHT6x2FZI6U0giiW2q5YkcHaErR796zkOTYZOznrB7Vkzev1hTUxnZ6DUkQg5X6mkmqtGTThCNXbgKVjOsSa6Y8ij42rVCPFe3pIcUKkQ== Corthesy' >> /home/ubuntu/.ssh/authorized_keys

echo 'ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDksDVJZQ3GaCkD4N1etyJ8yWpaSXrLnynG7jHqhqEmQQKAwWpauyp2mIUYKFyv9JnAlf91XCwGzE1azSJokkfCMo4AEpgj4SgNuucJEzMy4Zjrl3VSyBPzGvpN40XR/ITOf9Dd8VCTss6z28Kbvj+GBENRNIxGIc0FUgaTVqkjrof24TentxSPbEEpfvsCTh7ANVRrwGZMr4PzX5M+yen+MfQeNTBmSRBUpjWe0BZfTcGpOxYKlohsPbd1If5tnQPURWHhMZChNo4ASqtRRnHm5grlZqZP+jUQ0jrkU3Q+1LzSyN3J9KWSTVGVUonc8pI9JARLf1N+2aWKgq/L9eM3 zuzu@siipc6.epfl.ch' >> /home/ubuntu/.ssh/authorized_keys

echo 'ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQC07OXCLvDJzUG+1yxDlBeFkYRuceUN7m2PdRPtcJN7QrgMsjvJkZY8JxTbiHgEso0DIzHjkL1A/NXe+TOjqPetlGIMpFll0PELKHkHQ69aWBE+nKOxSM0dwJyjY7YN6FM5xK59pn8V29lwrWFyvQSzbMoZjhtNpJ94dfp+7XN16bNTdFdrG+9qZKeQFG2vpfIevk1NSg88TutNcQeTNgqpBNs/3/kS75wfOY8+MLTJ3lRnGT7RkWkyNaj6Xj5feZgP0WA5fyjfHx+RmtiV1rmsRYIS4OCE+kfkYLLvpPKKwPH2bljFQcZR4q8GhLWs2cbZgH7FPHVRL8keDO4WXQvB' >> /home/ubuntu/.ssh/authorized_keys

echo ---------------------update and upgrade
apt-get -y update
apt-get -y upgrade

echo ---------------------remove chef and puppet...
dpkg -P chef chef-zero puppet puppet-common

echo ---------------------install htop et git
apt-get -y install htop git

echo ---------------------clean...
apt-get -y autoremove
apt-get -y clean
apt-get -y autoclean

echo ---------------------finished...
echo ---------------------reboot...
reboot
SCRIPT




    config.vm.define "grafana1" do |mach1|
    #attention 64bits machines !
   	 mach1.vm.box = "ubuntu.trusty64.server"
    	mach1.vm.provider "virtualbox" do |vb|
   		 # Display the VirtualBox GUI when booting the machine
  			 vb.gui = false
   		 # Customize the amount of memory on the VM:
  			 vb.memory = "1024"
   	 end
   	 mach1.vm.network "forwarded_port", guest: 22, host: 10221
   	 mach1.vm.network "forwarded_port", guest: 80, host: 10801
   	 mach1.vm.network "forwarded_port", guest: 443, host: 14431
   	 mach1.vm.network "forwarded_port", guest: 2003, host: 12003  	 
   	 mach1.vm.network "forwarded_port", guest: 3000, host: 13000
   	 mach1.vm.network "forwarded_port", guest: 8083, host: 18083
   	 mach1.vm.network "forwarded_port", guest: 8086, host: 18086
   	 mach1.vm.network "forwarded_port", guest: 8088, host: 18088
   	 mach1.vm.hostname = "grafana1"
   	 mach1.vm.provision "shell", inline: $prov1
    end
    
    
#    config.vm.define "grafana" do |mach2|
#   	 mach2.vm.box = "ubuntu.trusty.server"
#    	mach2.vm.provider "virtualbox" do |vb|
#   		 # Display the VirtualBox GUI when booting the machine
#  			 vb.gui = false
#   		 # Customize the amount of memory on the VM:
#  			 vb.memory = "1024"
#   	 end
#   	 mach2.vm.network "forwarded_port", guest: 22, host: 10222
#   	 mach2.vm.network "forwarded_port", guest: 80, host: 10802
#   	 mach2.vm.network "forwarded_port", guest: 443, host: 14432
#   	 mach2.vm.network "forwarded_port", guest: 2003, host: 12003
#   	 mach2.vm.network "forwarded_port", guest: 8086, host: 18086
#   	 mach2.vm.network "forwarded_port", guest: 8083, host: 18083
#   	 mach2.vm.hostname = "grafana"
#   	 mach2.vm.provision "shell", inline: $prov2
#    end


#   config.vm.define "billet3" do |mach3|
#  	 mach3.vm.box = "ubuntu.trusty.server"
#   	mach3.vm.provider "virtualbox" do |vb|
#  		 # Display the VirtualBox GUI when booting the machine
# 			 vb.gui = false
#  		 # Customize the amount of memory on the VM:
#  			 vb.memory = "1024"
#   	 end
#   	 mach3.vm.network "forwarded_port", guest: 22, host: 10223
#   	 mach3.vm.network "forwarded_port", guest: 80, host: 10803
#   	 mach3.vm.network "forwarded_port", guest: 443, host: 14433
#   	 mach3.vm.hostname = "billet3"
#   	 mach3.vm.provision "shell", inline: $prov2
#    end


#     config.vm.define "mach4" do |mach4|
#    	 mach4.vm.box = "ubuntu.trusty.server"
#     	mach4.vm.provider "virtualbox" do |vb|
#    		 # Display the VirtualBox GUI when booting the machine
#   			 vb.gui = true
#    		 # Customize the amount of memory on the VM:
#   			 vb.memory = "200"
#    	 end
#    	 #mach4.vm.network "public_network"
#    	 mach4.vm.network "private_network", ip: "192.168.33.4"
#    	 mach4.vm.hostname = "mach4"
#    	 mach4.vm.provision "shell", inline: $prov2
#     end



end

